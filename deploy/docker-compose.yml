services:
  app:
    build:
      context: ..        # Корень проекта (api-shop/)
      dockerfile: deploy/Dockerfile  # Путь к Dockerfile
    image: laravel-shop-app
    container_name: laravel-shop-app
    restart: unless-stopped
    environment:
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    working_dir: /var/www/html
    ports:
      - "9000"
    networks:
      - laravel-network

  db:
    image: postgres:16
    container_name: laravel-shop-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - laravel-network

  nginx:
    image: nginx:latest
    container_name: laravel-shop-nginx
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ../project:/var/www/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
      - db
    networks:
      - laravel-network

  adminer:
    image: adminer:latest
    container_name: laravel-shop-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: "nette"
    networks:
      - laravel-network

volumes:
  pgdata:

networks:
  laravel-network:
    driver: bridge